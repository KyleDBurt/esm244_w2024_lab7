---
title: "Lab7_ESM244"
author: "Kyle Burt"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(here)
library(tidymodels)
```

# Tidymodels with a classifier task

```{r}
t_df <- read_csv(here("data/titanic/titanic_survival.csv"))

surv_df <- t_df |>
  mutate(survived = factor(survived),
         pclass = factor(pclass)) |>
  select(-cabin, -ticket, -parch, -sib_sp)

ggplot(surv_df, aes(x = survived, y = fare)) +
  geom_boxplot()
```

# Basic BLR in R

```{r}
f1 <- survived ~ sex + pclass + fare
f2 <- survived ~ passenger_id + embarked

blr1 <- glm(formula = f1, data = surv_df, family = binomial)
blr2 <- glm(formula = f2, data = surv_df, family = binomial)

table(t_df |> select(embarked, pclass))
```

### Pseudocode

* purrr to test all models at once

* AIC or BIC for comparison

* decide arbitrary k-fold cross validation

* make a function and use map

* separating training data and testing data, comparing accuracy

# Using tidymodels

## Split the data

```{r}
## Check balance of survived column

surv_df |>
  group_by(survived) |>
  summarize(n = n()) |>
  mutate(prop = n / sum(n))

set.seed(123)
surv_split <- initial_split(surv_df, prop = 0.8, strata = survived)

surv_train_df <- training(surv_split)
surv_test_df <- testing(surv_split)
```

## Basic models with parsnip (tidymodels)

```{r set up a blr model with our data}
blr_mdl <- logistic_reg() |>
  set_engine("glm")

blr1_fit <- blr_mdl |>
  fit(formula = f1, data = surv_train_df)
garbage_fit <- blr_mdl |>
  fit(formula = f2, data = surv_train_df)
```

## Predict our testing data

```{r}
surv_test_predict <- surv_test_df %>%
  mutate(predict(blr1_fit, new_data = surv_test_df)) %>%
  mutate(predict(blr1_fit, new_data = ., type = "prob"))

table(surv_test_predict %>%
        select(survived, .pred_class))
### confusion matrix
```

```{r}
accuracy(surv_test_predict, truth = survived, estimate = .pred_class)
roc_df <- roc_curve(surv_test_predict, truth = survived, .pred_0)
autoplot(roc_df)
```

```{r}
garbage_test_df <- surv_test_df %>%
  mutate(predict(garbage_fit, new_data = .)) %>%
  mutate(predict(garbage_fit, new_data = ., type = "prob"))
accuracy(garbage_test_df, truth = survived, estimate = .pred_class)
garbage_roc_df <- garbage_test_df %>%
  roc_curve(truth = survived, .pred_0)
autoplot(garbage_roc_df)

yardstick::roc_auc(surv_test_predict, truth = survived, .pred_0)
yardstick::roc_auc(garbage_test_df, truth = survived, .pred_0)
```

## Tidymodels

```{r}
set.seed(10101)
surv_train_folds <- vfold_cv(surv_train_df, v = 10)
```

```{r}
blr_mdl <- logistic_reg() |>
  set_engine("glm")

blr_wf <- workflow() |>
  add_model(blr_mdl) |>
  add_formula(survived ~ pclass + sex)

blr_fit_folds <- blr_wf |>
  fit_resamples(surv_train_folds)

blr_fit_folds
collect_metrics(blr_fit_folds)
```

## Extra

```{r}
rf_mdl <- rand_forest() |>
  set_engine("ranger") |>
  set_mode("classification")

rf_wf <- workflow() |>
  add_model(rf_mdl) |>
  add_formula(survived ~ pclass + sex)

rf_fit_folds <- rf_wf |>
  fit_resamples(surv_train_folds)

rf_fit_folds
collect_metrics(rf_fit_folds)
```


